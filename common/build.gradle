architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/slimeys_utility.accesswidener")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '17'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://modmaven.dev/'
    }
    maven {
        name = "Valkyrien Skies Internal"
        url = 'https://maven.valkyrienskies.org'
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "ParchmentMC"
        url = "https://maven.parchmentmc.org"
    }
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation libs.fabric

    // Architectury API
    modApi libs.common.architectury

    // Valkyrien Skies 2
    modApi(libs.common.valkyrienskies)

    // VS Core
    compileOnly(libs.bundles.core.valkyrienskies)

    modImplementation(libs.fabric.obsidianui)

    modImplementation(libs.common.kubejs)
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            groupId = "org.valkyrienskies.eureka"
            version = project.version
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }
}